/*
 * File: app/view/ui/MyViewport.js
 * Date: Sat Sep 10 2011 12:23:48 GMT+0200 (W. Europe Daylight Time)
 *
 * This file was generated by Ext Designer version 1.2.0.
 * http://www.sencha.com/products/designer/
 *
 * This file will be auto-generated each and everytime you export.
 *
 * Do NOT hand edit this file.
 */

Ext.define('AM.view.fachgebiete.Admin', {

    alias : 'widget.fachgebieteAdmin',
    extend: 'Ext.container.Container',
    
    width: 700,
    
    initComponent: function() {    	
    	var me = this;
          	
        var storeFachgebiet = Ext.create('Ext.data.Store', {
            autoLoad: true,
            autoSync: true,
            model: 'AM.model.fachgebiete.FachgebieteData',  
        });        
        
        /* muss wegen OpenID so gemacht werden, bei insert können wir über OpenID nicht gehen */
        var storeGetIdOfLoggedInPerson  = Ext.create('Ext.data.Store', {
            autoLoad: true,
            autoSync: true,
            model: 'AM.model.LoggedInPerson',  
        });         
        
        console.log("Person id: " + storeGetIdOfLoggedInPerson.getAt(0).get("id"));        
                    
        me.items = [
                    {
                        xtype: 'form',
                        id: 'formAddFachgebiet',
                        bodyPadding: 10,
                        margin: '10 0 10 0',
                        title: 'Neues Fachgebiet eintragen',
                        
//                                    fieldDefaults: {
//                                        anchor: '100%',
//                                        labelAlign: 'right'
//                                    },                
                        
                        listeners: {
                            // hier wird auf das "create" event gehört und ein neuer Datensatz per Post an die im Model definierte Adresse geschickt
                        	create: function(form, data){
                        		storeFachgebiet.insert(0, data);
                            }
                        },    
                        
                        items: [
                                {
                                    xtype: 'hiddenfield',
                                    name: 'authorID',
                                    value: storeGetIdOfLoggedInPerson.getAt(0).get("id")                    	
                                },                                
    		                    {
    		                        xtype: 'textfield',
    		                        name: 'edFachgebiet',
    		                        fieldLabel: 'Fachgebiet',
    		                        allowBlank: false,
    		                        anchor: '100%',
    		                    }, 
    		                    {
    		                        xtype: 'textfield',
    		                        name: 'edKuerzel',
    		                        fieldLabel: 'Kürzel',
    		                        allowBlank: false,
    		                        anchor: '100%',
    		                        margin: '20 0 10 0',
    		                    },      		                    
    		                    {
    		                        xtype: 'numberfield',
    		                        name: 'edBudget',
    		                        fieldLabel: 'Budget',
    		                        allowBlank: false,
    		                        allowNegative: false,
    		                        anchor: '100%',
    		                        margin: '0 0 20 0',
    		                    },                                    
    		                    
    		                    
        		            ],
        	                dockedItems: [
        	                              {
        	                                  xtype: 'toolbar',
        	                                  anchor: '100%',
        	                                  dock: 'bottom',
        	                                  items: [
        	                                          {
        	                   						   xtype: 'tbfill'
        	                   					  }, 
        	                   					{
        	                                          xtype: 'button',
        	                                          itemId: 'btnFachgebietHinzufuegen',
        	                                          text: 'Fachgebiet hinzufügen',
        	                                          icon: 'resources/images/drop-add.gif',
        	                                          handler: function(){
        	                                              var form = me.getComponent("formAddFachgebiet").getForm();
        	                                              // prüfen ob Pflichtfelder ausgefüllt sind (allowBlank-Attribut) und evtl Validitätsbedingung im Model
        	                                              console.log("Form valid: " + form.isValid());
        	                                              if (form.isValid()) {
        	                                            	  me.getComponent("formAddFachgebiet").fireEvent('create', me.getComponent("formAddFachgebiet"), form.getValues());
        	                                                  form.reset();
        	                                              }
        	                                          }
        	                                      }  , '-', {
        	                                          xtype: 'button',
        	                                          itemId: 'btnReset',
        	                                          text: 'Reset',
        	                                          icon: 'resources/images/Arrow_undo.png',
        	                                          handler: function(){
//        	                                              this.setActiveRecord(null);
        	                                              me.getComponent("formAddFachgebiet").getForm().reset();
        	                                          }
        	                                      }                             


        	                                  ]
        	                              }
        	                          ],        		            
        		            

                            },                    
        ];
        me.callParent(arguments);
    }
});