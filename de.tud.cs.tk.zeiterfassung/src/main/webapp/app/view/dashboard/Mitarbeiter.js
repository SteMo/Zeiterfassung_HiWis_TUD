/*
 * File: app/view/ui/MyViewport.js
 * Date: Sat Sep 10 2011 12:23:48 GMT+0200 (W. Europe Daylight Time)
 *
 * This file was generated by Ext Designer version 1.2.0.
 * http://www.sencha.com/products/designer/
 *
 * This file will be auto-generated each and everytime you export.
 *
 * Do NOT hand edit this file.
 */

Ext.define('AM.view.dashboard.Mitarbeiter', {

    alias : 'widget.dashboardMitarbeiter',
    extend: 'Ext.container.Container',
    
    width: 700,
    
    initComponent: function() {    	
    	var me = this;
            	 	
        var storeVertragsdaten = Ext.create('Ext.data.Store', {
            autoLoad: true,
            autoSync: true,
            model: 'AM.model.HiWiVertrag',  
        });      
        var storeAufgaben = Ext.create('Ext.data.Store', {
            autoLoad: true,
            autoSync: true,
            model: 'AM.model.HiWiAufgabe',  
        });         
                
        /* lade allgemeine Infos zu Dashboard des Mitarbeiters */
        var storeDashboardInfo = Ext.create('Ext.data.Store', {
            model: 'AM.model.MitarbeiterDashboardInfo',  
            autoLoad: false,
        });
        
        /* muss wegen OpenID so gemacht werden, bei insert können wir über OpenID nicht gehen */
        var storeGetIdOfLoggedInPerson  = Ext.create('Ext.data.Store', {
            autoLoad: true,
            autoSync: true,
            model: 'AM.model.LoggedInPerson',  
        });         
        storeGetIdOfLoggedInPerson.load(function(records, operation, success) {
            var authorID = storeGetIdOfLoggedInPerson.getAt(0).get("id");
            console.log("Person id: " + authorID);  
            storeDashboardInfo.getProxy().api.read = 'ws/personen/madb/'+storeGetIdOfLoggedInPerson.getAt(0).get("id"); // Called when reading existing records 
            storeDashboardInfo.load(function(records, operation, success) {
                (Ext.ComponentQuery.query('#budget')[0]).setValue(storeDashboardInfo.getAt(0).get("budget"));
                (Ext.ComponentQuery.query('#aktiveHiwis')[0]).setValue(storeDashboardInfo.getAt(0).get("aktiveHiwis"));
                (Ext.ComponentQuery.query('#vorgesetzter')[0]).setValue(storeDashboardInfo.getAt(0).get("vorgesetzter"));
                (Ext.ComponentQuery.query('#aktiveAufgaben')[0]).setValue(storeDashboardInfo.getAt(0).get("aktiveAufgaben"));
                (Ext.ComponentQuery.query('#fachgruppe')[0]).setValue(storeDashboardInfo.getAt(0).get("fachgruppe"));
            }); 
    	});            

//        /* proxy entsprechend der ID setzen um nur nach Daten des Mitarbeiters Anfrage an Webservice zu starten */
//        storeDashboardInfo.getProxy().api.read = 'ws/personen/madb/'+this.authorID; // Called when reading existing records 
//        storeDashboardInfo.load(function(records, operation, success) {
//            console.log("Records: "+records);
//            console.log("Operation: "+operation);
//            console.log("success: "+success);
//            console.log("URL: ws/personen/madb/"+this.authorID);
//            (Ext.ComponentQuery.query('#budget')[0]).setValue(storeDashboardInfo.getAt(0).get("budget"));
//            (Ext.ComponentQuery.query('#aktiveHiWis')[0]).setValue(storeDashboardInfo.getAt(0).get("aktiveHiWis"));
//            (Ext.ComponentQuery.query('#vorgesetzter')[0]).setValue(storeDashboardInfo.getAt(0).get("vorgesetzter"));
//            (Ext.ComponentQuery.query('#aktiveAufgaben')[0]).setValue(storeDashboardInfo.getAt(0).get("aktiveAufgaben"));
//            (Ext.ComponentQuery.query('#fachgruppe')[0]).setValue(storeDashboardInfo.getAt(0).get("fachgruppe"));
//        });              
        
        
        
        me.items = [
            {
                xtype: 'gridpanel',
                itemId: 'vertragsendeGrid',
                title: 'Vertragsende innerhalb der n&auml;chsten 2 Monate',
                margin: '10 0 10 0',
                store: storeVertragsdaten,
                columns: [
                      {
                          xtype: 'datecolumn',
                          dataIndex: 'end',
                          text: 'Vertragsende',
                          format: 'd.m.y',
                          width: 80,
                      },                          
                    {
                        xtype: 'gridcolumn',
                        dataIndex: 'hiwi',
                        text: 'Name',
                        flex: 1,
//                        renderer: function(val, meta, record) {
//                            return record.data.vorname + " " + record.data.name;
//                      }

                    },

//                    {
//                        xtype: 'numbercolumn',
//                        dataIndex: 'beginn',
//                        text: 'Vertragsbeginn',
//                    	  format: 'd.m.y',
//                    },
                    {
                        xtype: 'numbercolumn',
                        dataIndex: 'doneHours',
                        text: 'Gearbeitete Stunden',
                        width: 120
                    },
                    {
                        xtype: 'gridcolumn',
                        dataIndex: 'remainingTasks',
                        text: 'Bearbeitete Aufgaben',
                        width: 120
                    },                    
//                    {
//                        xtype: 'gridcolumn',
//                        text: 'Tarif',
//                        dataIndex: 'rate',
//                    }
                ],
                viewConfig: {

                }
            },
            {
                xtype: 'form',
                height: 87,
                itemId: 'infoForm',
                padding: '',
                layout: {
                    columns: 2,
                    type: 'table'
                },
                bodyPadding: 10,
                items: [
                    {
                        xtype: 'displayfield',
                        width: 250,
                        name: 'budget',
                        itemId: 'budget',
                        value: 'Display Field',
                        fieldLabel: 'Budget',
                        anchor: '100%'
                    },
                    {
                        xtype: 'displayfield',
                        name: 'aktiveHiwis',
                        itemId: 'aktiveHiwis',
                        value: 'Display Field',
                        fieldLabel: 'Aktive HiWis',
                        anchor: '100%'
                    },
                    {
                        xtype: 'displayfield',
                        name: 'vorgesetzter',
                        itemId: 'vorgesetzter',
                        value: 'Display Field',
                        fieldLabel: 'Vorgesetzter'
                    },
                    {
                        xtype: 'displayfield',
                        name: 'aktiveAufgaben',
                        itemId: 'aktiveAufgaben',
                        value: 'Display Field',
                        fieldLabel: 'Aktive Aufgaben'
                    },
                    {
                        xtype: 'displayfield',
                        name: 'fachgruppe',
                        itemId: 'fachgruppe',
                        value: 'Display Field',
                        fieldLabel: 'Fachgruppe'
                    }
                ]
            },
            {
                xtype: 'gridpanel',
                itemId: 'aufgabenDeadlineGrid',
                title: 'Aufgaben Deadlines',
                margin: '10 0 0 0',
                store: storeAufgaben,
                columns: [
                    {
                        xtype: 'datecolumn',
                        dataIndex: 'deadline',
                        width: 65,
                        text: 'Deadline',
                        format: 'd.m.y',
                    },
                    {
                        xtype: 'gridcolumn',
                        dataIndex: 'title',
                        text: 'Aufgabe',
                        flex: 1
                    },
                    {
                        xtype: 'gridcolumn',
                        dataIndex: 'hiwi',
                        text: 'HiWi',
                        width: 170,
                    },
                    {
                        xtype: 'datecolumn',
                        dataIndex: 'assignedAt',
                        text: 'Zugewiesen am',
                        format: 'd.m.y',
                    },   
                    {
                        xtype: 'numbercolumn',
                        dataIndex: 'priority',
                        text: 'Priorität',
                        format: '0',
                        width: 60
//                        allowNegative: false,                    	
                    }                    
                ],
                viewConfig: {

                }
            }
        ];
        me.callParent(arguments);
    }
});